---
import { basics } from "@cv"
import hyperlinkIconPath from "./hyperlink.svg?url" 

interface Props {
  title: string
}

const { title } = Astro.props

const { image, summary, url } = basics
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>{title}</title>
    <meta name="description" content={summary} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preload" as="image" href={image} />

    <meta property="og:url" content={url} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={summary} />
    <meta property="og:image" content="" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={url.split("//")[1] ?? ''} />
    <meta property="twitter:url" content={url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={summary} />
    <meta name="twitter:image" content="" />
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global define:vars={{ hyperlinkIconUrl: `url("${hyperlinkIconPath}")` }}>

  @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300..700&display=swap');

  /* Geist-Mono 300 served from a local file: latin-ext charset */
  @font-face {
    font-family: 'Geist Mono';
    font-style: normal;
    font-weight: 300;
    font-display: swap;
    src: url(/geist-mono-ext.woff2) format('woff2');
    unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
  }
  /* Geist-Mono 300 served from a local file: latin charset */
  /* (this woff2 font file is modified to have narrower spaces) */
  @font-face {
    font-family: 'Geist Mono';
    font-style: normal;
    font-weight: 300;
    font-display: swap;
    src: url(/geist-mono.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }

  /* Geist-Mono 500 served from a local file: latin charset */
  /* (this woff2 font file is modified to have narrower spaces) */
  @font-face {
    font-family: 'Geist Mono';
    font-style: normal;
    font-weight: 500;
    font-display: swap;
    src: url(/geist-mono-bold.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }
  html {
    font-family:
      "Geist Mono",
      Menlo,
      Monaco,
      Lucida Console,
      "Courier New",
      Courier,
      monospace;
    font-weight: 300;
    background: #fff;
    letter-spacing: -0.025rem;
  }

  body,
  figure {
    margin: 0;
    padding: 0;
  }

  a {
    text-decoration: none;
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  h1,
  h2,
  h3,
  h4 {
    margin: 0;
    font-family:
      "Space Grotesk",
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans-serif;
    font-optical-sizing: auto;
    font-style: normal;
    page-break-after: avoid !important;
  }

  h3 {
    font-weight: 550 !important;
  }

  p {
    color: #666;
    font-size: 0.9rem;
    line-height: 1.5;
    margin: 0;
    text-wrap: pretty;
  }

  .print {
    display: none !important;
  }

  @page {
      size: portrait;
      margin: 5%;
      margin-top: 10%;
      margin-bottom: 10%;
      page-orientation: upright;
  }

  @page :first {
    margin-top: 5%;
  }

  @media print {
    .no-print {
      display: none !important;
    }

    .print {
      display: block !important;
    }

    astro-dev-toolbar {
      display: none !important;
    }

    article {
      break-inside: avoid;
    }

    .print-together {
      page-break-inside: avoid !important;
    }

    article > header > ul > li > a {
      -webkit-print-color-adjust: exact !important; /* Chrome, Safari 6 – 15.3, Edge */
      color-adjust: exact !important;               /* Firefox 48 – 96 */
      print-color-adjust: exact !important;         /* Firefox 97+, Safari 15.4+ */
    }
  }

  .shiny_text, .shiny_bg {
    background-image: linear-gradient(
      115deg, 
      #0000 0%, 
      #0000 20%, 
      #fffb 20%, 
      #0000 60%
    );
    background-origin: padding-box;
    background-repeat: repeat;
    background-size: 200%;
    background-position-x: 100%;
    user-select: none;
  }

  /* @media (prefers-color-scheme: dark) {
    .shiny_text {
      background-color: white !important;
      background-image: linear-gradient(
      115deg, 
      #0000 0%, 
      #0000 20%, 
      #0009 20%, 
      #0000 60%
    );
    }
  } */

  .shiny_text {
    color: transparent;
    background-clip: text;
    background-color: black;
  }

  .shiny_bg {
    background-clip: padding-box;
  }

  .shiny_bg:hover svg {
    animation: shine2 0.45s;
    animation-timing-function: ease-in;
  }

  @keyframes shine {
		100% {
			background-position-x: -100%;
		}
	}

  @keyframes shine2 {
		20% {
			color: #fff;
		}
    100% {
      color: inherit;
    }
	}

  .shiny_text:hover {
    animation: shine 0.85s;
  }

  .shiny_bg:hover { 
    animation: shine 0.45s;
  }
  .shiny_text:hover, .shiny_bg:hover {
    animation-timing-function: ease-out;
  }

  article > header > ul > li > a {
    font-weight: 500;
    background-image: var(--hyperlinkIconUrl);
    background-repeat: no-repeat;
    background-position-x: 0px;
    padding-left: 18px;
  }

  article > header > ul > li > a:hover {
    text-decoration:  underline;
  }
  
</style>
